{"version":3,"sources":["js/timer.js","index.js"],"names":["Timer","constructor","selector","targetDate","timerId","refs","timer","document","querySelector","start","target","Date","days","hours","mins","secs","startCountOnTable","timerid","setInterval","currentDate","now","deltaTime","getTimeComponents","changeTableTime","elem","daysNum","textContent","checkEnding","hoursNum","minsNum","secsNum","timeIsOver","pad","timeStr","String","padStart","time","Math","floor","nextElementSibling","arg","body","style","backgroundColor","clearInterval","timerOne"],"mappings":"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","file":"src.4c6e1b2f.js","sourceRoot":"../src","sourcesContent":["class Timer {\n  constructor({ selector, targetDate }) {\n    this.targetDate = targetDate;\n    this.timerId = null;\n    this.refs = {\n      timer: document.querySelector(selector),\n    };\n  }\n  start() {\n    const target = new Date(this.targetDate);\n    const { days, hours, mins, secs } = target;\n    Timer.startCountOnTable({ days, hours, mins, secs }, this.refs.timer);\n\n    this.timerid = setInterval(() => {\n      const currentDate = Date.now();\n      const deltaTime = target - currentDate;\n      const { days, hours, mins, secs } = Timer.getTimeComponents(deltaTime);\n      Timer.changeTableTime({ days, hours, mins, secs }, this.refs.timer);\n    }, 1000);\n  }\n  static changeTableTime({ days, hours, mins, secs }, elem) {\n    const daysNum = elem.querySelector('span[data-value=\"days\"]');\n    daysNum.textContent = days;\n    Timer.checkEnding(daysNum);\n\n    const hoursNum = elem.querySelector('span[data-value=\"hours\"]');\n    hoursNum.textContent = hours;\n    Timer.checkEnding(hoursNum);\n\n    const minsNum = elem.querySelector('span[data-value=\"mins\"]');\n    minsNum.textContent = mins;\n    Timer.checkEnding(minsNum);\n\n    const secsNum = elem.querySelector('span[data-value=\"secs\"]');\n    secsNum.textContent = secs;\n    Timer.checkEnding(secsNum);\n    Timer.timeIsOver(secsNum, minsNum, hoursNum, daysNum);\n  }\n  static pad(timeStr) {\n    return String(timeStr).padStart(2, '0');\n  }\n  static getTimeComponents(time) {\n    const days = Timer.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = Timer.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = Timer.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = Timer.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n  static startCountOnTable({ days, hours, mins, secs }, elem) {\n    const daysNum = elem.querySelector('span[data-value=\"days\"]');\n    daysNum.textContent = days;\n    if (daysNum.textContent === '01') {\n      daysNum;\n    }\n    elem.querySelector('span[data-value=\"hours\"]').textContent = hours;\n    elem.querySelector('span[data-value=\"mins\"]').textContent = mins;\n    const secsNum = elem.querySelector('span[data-value=\"secs\"]');\n    secsNum.textContent = secs;\n    if (secsNum.textContent === '01') {\n      secsNum.nextElementSibling('.label').textContent = 'Second';\n    }\n  }\n  static checkEnding(elem) {\n    if (elem.textContent === '01') {\n      if (elem.nextElementSibling.textContent === 'Seconds') {\n        elem.nextElementSibling.textContent = 'Second';\n      } else {\n        elem.nextElementSibling.textContent = 'Seconds';\n      }\n      if (elem.nextElementSibling.textContent === 'Minuts') {\n        elem.nextElementSibling.textContent = 'Minut';\n      } else {\n        elem.nextElementSibling.textContent = 'Minuts';\n      }\n      if (elem.nextElementSibling.textContent === 'Hours') {\n        elem.nextElementSibling.textContent = 'Hour';\n      } else {\n        elem.nextElementSibling.textContent = 'Hours';\n      }\n      if (elem.nextElementSibling.textContent === 'Days') {\n        elem.nextElementSibling.textContent = 'Day';\n      } else {\n        elem.nextElementSibling.textContent = 'Days';\n      }\n    }\n  }\n  static timeIsOver(...arg) {\n    if (\n      arg[0].textContent === '00' &&\n      arg[1].textContent === '00' &&\n      arg[2].textContent === '00' &&\n      arg[3].textContent === '00'\n    ) {\n      arg[0].textContent = '00';\n      arg[1].textContent = '00';\n      arg[2].textContent = '00';\n      arg[3].textContent = '00';\n      document.body.style.backgroundColor = 'tomato';\n      clearInterval(this.timerId);\n    }\n  }\n}\n\nconst timerOne = new Timer({ selector: '#timer-1', targetDate: 'June 16, 2021' });\n\ntimerOne.start();\n","import './sass/main.scss';\nimport './js/timer.js';\n"]}