{"version":3,"sources":["js/timer.js","index.js"],"names":["Timer","constructor","selector","targetDate","timerId","refs","timer","document","querySelector","start","target","Date","timerid","setInterval","currentDate","now","deltaTime","days","hours","mins","secs","getTimeComponents","changeTableTime","elem","daysNum","textContent","checkEnding","hoursNum","minsNum","secsNum","timeIsOver","pad","timeStr","String","padStart","time","Math","floor","value1","value","nextElementSibling","startCount","arg","body","style","backgroundColor","clearInterval","timerOne"],"mappings":";;;AAAA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBA,KAAAA,WAAaA,EACbC,KAAAA,QAAU,KACVC,KAAAA,KAAO,CACVC,MAAOC,SAASC,cAAcN,IAGlCO,QACQC,MAAAA,EAAS,IAAIC,KAAK,KAAKR,YAExBS,KAAAA,QAAUC,YAAY,KACnBC,MAAAA,EAAcH,KAAKI,MACnBC,EAAYN,EAASI,GACrB,KAAEG,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,GAASpB,EAAMqB,kBAAkBL,GAC5DhB,EAAMsB,gBAAgB,CAAEL,KAAAA,EAAMC,MAAAA,EAAOC,KAAAA,EAAMC,KAAAA,GAAQ,KAAKf,KAAKC,QAC5D,KAEEgB,wBAAgB,KAAEL,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,GAAQG,GAC5CC,MAAAA,EAAUD,EAAKf,cAAc,2BACnCgB,EAAQC,YAAcR,EACtBjB,EAAM0B,YAAYF,EAAS,MAAO,QAE5BG,MAAAA,EAAWJ,EAAKf,cAAc,4BACpCmB,EAASF,YAAcP,EACvBlB,EAAM0B,YAAYC,EAAU,OAAQ,SAE9BC,MAAAA,EAAUL,EAAKf,cAAc,2BACnCoB,EAAQH,YAAcN,EACtBnB,EAAM0B,YAAYE,EAAS,QAAS,UAE9BC,MAAAA,EAAUN,EAAKf,cAAc,2BACnCqB,EAAQJ,YAAcL,EACtBpB,EAAM0B,YAAYG,EAAS,SAAU,WACrC7B,EAAM8B,WAAWD,EAASD,EAASD,EAAUH,GAExCO,WAAIC,GACFC,OAAAA,OAAOD,GAASE,SAAS,EAAG,KAE9Bb,yBAAkBc,GAMhB,MAAA,CAAElB,KALIjB,EAAM+B,IAAIK,KAAKC,MAAMF,EAAQ,QAK3BjB,MAJDlB,EAAM+B,IAAIK,KAAKC,MAAOF,EAAQ,MAAyB,OAI/ChB,KAHTnB,EAAM+B,IAAIK,KAAKC,MAAOF,EAAQ,KAAoB,MAGnCf,KAFfpB,EAAM+B,IAAIK,KAAKC,MAAOF,EAAQ,IAAc,OAKpDT,mBAAYH,EAAMe,EAAQC,GACN,OAArBhB,EAAKE,cACPF,EAAKiB,mBAAmBf,YAAca,GAEf,OAArBf,EAAKE,cACPF,EAAKiB,mBAAmBf,YAAcc,GAInCE,qBAIAX,qBAAcY,GAEM,OAAvBA,EAAI,GAAGjB,aACgB,OAAvBiB,EAAI,GAAGjB,aACgB,OAAvBiB,EAAI,GAAGjB,aACgB,OAAvBiB,EAAI,GAAGjB,cAEPiB,EAAI,GAAGjB,YAAc,KACrBiB,EAAI,GAAGjB,YAAc,KACrBiB,EAAI,GAAGjB,YAAc,KACrBiB,EAAI,GAAGjB,YAAc,KACrBlB,SAASoC,KAAKC,MAAMC,gBAAkB,SACtCC,cAAc,KAAK1C,WAKzB,MAAM2C,EAAW,IAAI/C,EAAM,CAAEE,SAAU,WAAYC,WAAY,kBAE/D4C,EAAStC;;AC/ET,aADA,QAAA,oBACA,QAAA","file":"src.413282e0.js","sourceRoot":"../src","sourcesContent":["class Timer {\n  constructor({ selector, targetDate }) {\n    this.targetDate = targetDate;\n    this.timerId = null;\n    this.refs = {\n      timer: document.querySelector(selector),\n    };\n  }\n  start() {\n    const target = new Date(this.targetDate);\n\n    this.timerid = setInterval(() => {\n      const currentDate = Date.now();\n      const deltaTime = target - currentDate;\n      const { days, hours, mins, secs } = Timer.getTimeComponents(deltaTime);\n      Timer.changeTableTime({ days, hours, mins, secs }, this.refs.timer);\n    }, 1000);\n  }\n  static changeTableTime({ days, hours, mins, secs }, elem) {\n    const daysNum = elem.querySelector('span[data-value=\"days\"]');\n    daysNum.textContent = days;\n    Timer.checkEnding(daysNum, 'Day', 'Days');\n\n    const hoursNum = elem.querySelector('span[data-value=\"hours\"]');\n    hoursNum.textContent = hours;\n    Timer.checkEnding(hoursNum, 'Hour', 'Hours');\n\n    const minsNum = elem.querySelector('span[data-value=\"mins\"]');\n    minsNum.textContent = mins;\n    Timer.checkEnding(minsNum, 'Minut', 'Minuts');\n\n    const secsNum = elem.querySelector('span[data-value=\"secs\"]');\n    secsNum.textContent = secs;\n    Timer.checkEnding(secsNum, 'Second', 'Seconds');\n    Timer.timeIsOver(secsNum, minsNum, hoursNum, daysNum);\n  }\n  static pad(timeStr) {\n    return String(timeStr).padStart(2, '0');\n  }\n  static getTimeComponents(time) {\n    const days = Timer.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = Timer.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = Timer.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = Timer.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  static checkEnding(elem, value1, value) {\n    if (elem.textContent === '01') {\n      elem.nextElementSibling.textContent = value1;\n    }\n    if (elem.textContent !== '01') {\n      elem.nextElementSibling.textContent = value;\n    }\n  }\n\n  static startCount() {\n    \n  }\n\n  static timeIsOver(...arg) {\n    if (\n      arg[0].textContent === '00' &&\n      arg[1].textContent === '00' &&\n      arg[2].textContent === '00' &&\n      arg[3].textContent === '00'\n    ) {\n      arg[0].textContent = '00';\n      arg[1].textContent = '00';\n      arg[2].textContent = '00';\n      arg[3].textContent = '00';\n      document.body.style.backgroundColor = 'tomato';\n      clearInterval(this.timerId);\n    }\n  }\n}\n\nconst timerOne = new Timer({ selector: '#timer-1', targetDate: 'June 16, 2021' });\n\ntimerOne.start();\n","import './sass/main.scss';\nimport './js/timer.js';\n"]}